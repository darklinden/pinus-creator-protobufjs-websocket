// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: LargeNumber.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Proto {

  /// <summary>Holder for reflection information generated from LargeNumber.proto</summary>
  public static partial class LargeNumberReflection {

    #region Descriptor
    /// <summary>File descriptor for LargeNumber.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LargeNumberReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFMYXJnZU51bWJlci5wcm90bxIFcHJvdG8iMAoLTGFyZ2VOdW1iZXISDwoH",
            "c3RyX251bRgBIAEoCRIQCghsb25nX251bRgCIAEoA2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.LargeNumber), global::Proto.LargeNumber.Parser, new[]{ "StrNum", "LongNum" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class LargeNumber : pb::IMessage<LargeNumber>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LargeNumber> _parser = new pb::MessageParser<LargeNumber>(() => new LargeNumber());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LargeNumber> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.LargeNumberReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LargeNumber() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LargeNumber(LargeNumber other) : this() {
      strNum_ = other.strNum_;
      longNum_ = other.longNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LargeNumber Clone() {
      return new LargeNumber(this);
    }

    /// <summary>Field number for the "str_num" field.</summary>
    public const int StrNumFieldNumber = 1;
    private string strNum_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StrNum {
      get { return strNum_; }
      set {
        strNum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "long_num" field.</summary>
    public const int LongNumFieldNumber = 2;
    private long longNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LongNum {
      get { return longNum_; }
      set {
        longNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LargeNumber);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LargeNumber other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StrNum != other.StrNum) return false;
      if (LongNum != other.LongNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StrNum.Length != 0) hash ^= StrNum.GetHashCode();
      if (LongNum != 0L) hash ^= LongNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StrNum.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(StrNum);
      }
      if (LongNum != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(LongNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StrNum.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(StrNum);
      }
      if (LongNum != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(LongNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StrNum.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StrNum);
      }
      if (LongNum != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LongNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LargeNumber other) {
      if (other == null) {
        return;
      }
      if (other.StrNum.Length != 0) {
        StrNum = other.StrNum;
      }
      if (other.LongNum != 0L) {
        LongNum = other.LongNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            StrNum = input.ReadString();
            break;
          }
          case 16: {
            LongNum = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            StrNum = input.ReadString();
            break;
          }
          case 16: {
            LongNum = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
